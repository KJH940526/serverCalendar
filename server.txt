https://blog.outsider.ne.kr/312 --get post 차이

https://www.a-mean-blog.com/ko/blog/Node-JS-%EC%B2%AB%EA%B1%B8%EC%9D%8C/Hello-World/HTTP-Methods-HTTP-Verbs-GET-POST-PUT-PATCH-DELETE

GET
서버에게 resource를 보내달라고 요청할 때 사용합니다. 
서버(혹은 DB)의 resource는 클라이언트로 전달만 될 뿐 
변경되지 않습니다.
예를 들어 웹브라우저에 http://example.com/exmaple.png 를 
입력하면 해당 그림 파일이 표시되고, 
http://example.com/something 을 입력하면 
서버가 해당 페이지를 찾아 보여줍니다. 
참고로 웹브라우저 주소창에 주소를 입력하는 행위는 
항상 get인식됩니다.

POST
서버에게 resource를 보내면서 해당 resource를 
DB혹은 서버에 저장해달라고 요청할 때 사용합니다. 
예를들어 회원가입을 하면 DB에 새로운 회원정보가 등록되고, 
사진을 업로드 하면 그 사진이 웹사이트에 등록되는데 
이러한 요청은 post를 통해 이루어 집니다.



--------------------------------------------------------
https://www.a-mean-blog.com/ko/blog/Node-JS-%EC%B2%AB%EA%B1%B8%EC%9D%8C/Hello-World/Express%EB%A1%9C-%EC%84%9C%EB%B2%84-%EC%8B%A4%ED%96%89%ED%95%98%EA%B8%B0

require(모듈_이름) 함수는 node.js에서 기본적으로 
주어지는 함수로, modules폴더 안에 설치된 모듈을 
불러오는 함수입니다. 

app.get, app.listen은 해당부분의 코드가 
index.js 실행시 바로 실행되는 것이 아니라, 
app.get 부분은 서버에 get요청이 있는경우, 
app.listen은 서버가 실행되는 경우에 각각 실행이 됩니다. 
이렇게 어떠한 조건이 갖춰지면 실행되는 코드를 가지는 함수를 
event listener(이벤트 리스너)라고 합니다.

app.get 부분을 다시 살펴봅시다. 
이번 포스팅에서 가장 중요한 부분입니다.

app.get('/', function(req, res) { // '/' 위치에 'get'요청을 받는 경우,
  res.send('Hello World!'); // "Hello World!"를 보냅니다.
});

app.HTTP_Method_중_하나('Route_주소', 콜백_함수, 콜백_함수, 콜백_함수...)
